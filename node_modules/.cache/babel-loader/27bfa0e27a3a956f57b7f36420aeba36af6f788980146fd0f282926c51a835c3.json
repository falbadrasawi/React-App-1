{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\falba\\\\Desktop\\\\mobileDev\\\\React-App-1\\\\src\\\\components\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\n\n/**\r\n * Renders an array of strings as a filterable and expandable unordered list.\r\n * @param {Object} props\r\n * @param {string[]} props.initialMenuItems - The initial array of menu items.\r\n * @returns Component\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(_ref) {\n  _s();\n  let {\n    initialMenuItems\n  } = _ref;\n  // TODO: 2 - Maintain Menu State:\n  // Use the state hook to maintain the current set of menu items.\n  // Initialize this state based on the \"initialMenuItems\" prop.\n  const [menuItems, setMenuItems] = useState(initialMenuItems);\n\n  // State for the new menu item input field.\n  const [newMenuItem, setNewMenuItem] = useState(\"\");\n\n  // State for the filter text.\n  const [filter, setFilter] = useState(\"\");\n\n  // TODO: 3 - Implement AddMenuItem Callback:\n  // This function adds the text from the input field as a new menu item.\n  const addMenuItem = useCallback(() => {\n    // Do not add if the input is empty (ignoring whitespace).\n    if (newMenuItem.trim() === \"\") return;\n    console.log(\"Added menu item\");\n    // Add the new menu item to the beginning of the array.\n    setMenuItems(prevItems => [newMenuItem, ...prevItems]);\n    // Clear the input field after adding.\n    setNewMenuItem(\"\");\n  }, [newMenuItem]);\n\n  // TODO: 4 - Filter Menu Items:\n  // Filter the menu items based on the filter text using a case-insensitive regular expression.\n  // If the filter input is empty, all items are displayed.\n  const filteredMenuItems = menuItems.filter(item => {\n    if (!filter.trim()) return true;\n    // Create a case-insensitive regular expression from the filter text.\n    const regex = new RegExp(filter, \"i\");\n    return regex.test(item);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMenuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value),\n      placeholder: \"Enter new menu item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMenuItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value),\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"9uJAaehHQ/xgclC4QpFfGNnjx2E=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useCallback","Sidebar","initialMenuItems","menuItems","setMenuItems","newMenuItem","setNewMenuItem","filter","setFilter","addMenuItem","trim","console","log","prevItems","filteredMenuItems","item","regex","RegExp","test","map","index","event","target","value"],"sources":["C:/Users/falba/Desktop/mobileDev/React-App-1/src/components/Sidebar.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\"\r\n\r\n/**\r\n * Renders an array of strings as a filterable and expandable unordered list.\r\n * @param {Object} props\r\n * @param {string[]} props.initialMenuItems - The initial array of menu items.\r\n * @returns Component\r\n */\r\nexport default function Sidebar({ initialMenuItems }) {\r\n  // TODO: 2 - Maintain Menu State:\r\n  // Use the state hook to maintain the current set of menu items.\r\n  // Initialize this state based on the \"initialMenuItems\" prop.\r\n  const [menuItems, setMenuItems] = useState(initialMenuItems)\r\n\r\n  // State for the new menu item input field.\r\n  const [newMenuItem, setNewMenuItem] = useState(\"\")\r\n\r\n  // State for the filter text.\r\n  const [filter, setFilter] = useState(\"\")\r\n\r\n  // TODO: 3 - Implement AddMenuItem Callback:\r\n  // This function adds the text from the input field as a new menu item.\r\n  const addMenuItem = useCallback(() => {\r\n    // Do not add if the input is empty (ignoring whitespace).\r\n    if (newMenuItem.trim() === \"\") return\r\n\r\n    console.log(\"Added menu item\")\r\n    // Add the new menu item to the beginning of the array.\r\n    setMenuItems(prevItems => [newMenuItem, ...prevItems])\r\n    // Clear the input field after adding.\r\n    setNewMenuItem(\"\")\r\n  }, [newMenuItem])\r\n\r\n  // TODO: 4 - Filter Menu Items:\r\n  // Filter the menu items based on the filter text using a case-insensitive regular expression.\r\n  // If the filter input is empty, all items are displayed.\r\n  const filteredMenuItems = menuItems.filter(item => {\r\n    if (!filter.trim()) return true\r\n    // Create a case-insensitive regular expression from the filter text.\r\n    const regex = new RegExp(filter, \"i\")\r\n    return regex.test(item)\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {/*\r\n        TODO: 1 - Render Menu Items:\r\n        Render an unordered list of the menu items (filtered based on the filter input).\r\n        Each string in the menuItems array is rendered as its own list item.\r\n      */}\r\n      <ul>\r\n        {filteredMenuItems.map((item, index) => (\r\n          <li key={index}>{item}</li>\r\n        ))}\r\n      </ul>\r\n      {/* Input for entering a new menu item */}\r\n      <input\r\n        type=\"text\"\r\n        id=\"newMenuItemValue\"\r\n        value={newMenuItem}\r\n        onChange={(event) => setNewMenuItem(event.target.value)}\r\n        placeholder=\"Enter new menu item\"\r\n      />\r\n      <br />\r\n      {/* Button to add the new menu item */}\r\n      <button onClick={addMenuItem}>\r\n        Add Item\r\n      </button>\r\n      <br />\r\n      {/* Input for filtering menu items */}\r\n      <input\r\n        id=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={(event) => setFilter(event.target.value)}\r\n        placeholder=\"Filter by...\"\r\n      />\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;;AAE7C;AACA;AACA;AACA;AACA;AACA;AALA;AAMA,eAAe,SAASC,OAAO,OAAuB;EAAA;EAAA,IAAtB;IAAEC;EAAiB,CAAC;EAClD;EACA;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAACG,gBAAgB,CAAC;;EAE5D;EACA,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA;EACA,MAAMU,WAAW,GAAGT,WAAW,CAAC,MAAM;IACpC;IACA,IAAIK,WAAW,CAACK,IAAI,EAAE,KAAK,EAAE,EAAE;IAE/BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B;IACAR,YAAY,CAACS,SAAS,IAAI,CAACR,WAAW,EAAE,GAAGQ,SAAS,CAAC,CAAC;IACtD;IACAP,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC,EAAE,CAACD,WAAW,CAAC,CAAC;;EAEjB;EACA;EACA;EACA,MAAMS,iBAAiB,GAAGX,SAAS,CAACI,MAAM,CAACQ,IAAI,IAAI;IACjD,IAAI,CAACR,MAAM,CAACG,IAAI,EAAE,EAAE,OAAO,IAAI;IAC/B;IACA,MAAMM,KAAK,GAAG,IAAIC,MAAM,CAACV,MAAM,EAAE,GAAG,CAAC;IACrC,OAAOS,KAAK,CAACE,IAAI,CAACH,IAAI,CAAC;EACzB,CAAC,CAAC;EAEF,oBACE;IAAA,wBAME;MAAA,UACGD,iBAAiB,CAACK,GAAG,CAAC,CAACJ,IAAI,EAAEK,KAAK,kBACjC;QAAA,UAAiBL;MAAI,GAAZK,KAAK;QAAA;QAAA;QAAA;MAAA,QACf;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eAEL;MACE,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,kBAAkB;MACrB,KAAK,EAAEf,WAAY;MACnB,QAAQ,EAAGgB,KAAK,IAAKf,cAAc,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MACxD,WAAW,EAAC;IAAqB;MAAA;MAAA;MAAA;IAAA,QACjC,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MAAQ,OAAO,EAAEd,WAAY;MAAA,UAAC;IAE9B;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MACE,EAAE,EAAC,QAAQ;MACX,IAAI,EAAC,MAAM;MACX,KAAK,EAAEF,MAAO;MACd,QAAQ,EAAGc,KAAK,IAAKb,SAAS,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MACnD,WAAW,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAC1B;EAAA;IAAA;IAAA;IAAA;EAAA,QAGE;AAEV;AAAC,GAzEuBtB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}